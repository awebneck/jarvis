#! /bin/sh

### BEGIN INIT INFO
# Provides:		jarvis
# Required-Start:	$ejabberd $ircd-hybrid $syslog
# Required-Stop:	$ejabberd $ircd-hybrid $syslog
# Default-Start:	2 3 4 5
# Default-Stop:		1
# Short-Description:	XMPP / IRC chatbots
### END INIT INFO

set -e
# /etc/init.d/jarvis: start and stop the xmpp / irc chatbots

protect_default_file(){
    if [ ! -z "${DEFAULT_FILE}" ]; then
        if [ -f "${DEFAULT_FILE}" ]; then
            if [ "$(stat -c '%U:%G' /etc/default/jarvis)" != "root:root" ]; then
                chown root:root "${DEFAULT_FILE}"
            fi
            if [ "$(stat -c '%A' /etc/default/jarvis)" != "-r--------" ]; then
                chmod 0400 "${DEFAULT_FILE}"
            fi
        fi
    fi
}


export DEFAULT_FILE="/etc/default/jarvis";
protect_default_file

if test -f ${DEFAULT_FILE}; then
    . ${DEFAULT_FILE}
fi

. /lib/lsb/init-functions

# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}

git_revision(){
    if [ -z ${GIT_ENABLED} ]; then 
        echo 0
        return -1
    fi
    if [ ${GIT_ENABLED} -ne 1 ]; then 
        echo 0
        return -1
    fi
    if [ ! -z "${GIT_ROOT}" -a ! -z "${GIT_REPO}" ]; then
        echo $(cd ${GIT_REPO}; git log| head -1|awk '{print $2}')
    fi
}

git_update(){
    if [ -z ${GIT_ENABLED} ]; then return -1; fi
    if [ -z ${GIT_ROOT}    ]; then return -1 ;fi
    if [ ! -d ${GIT_ROOT}  ]; then 
        mkdir -p "${GIT_ROOT}"
    fi
    if [ -z ${GIT_REPO}    ]; then return -1 ;fi
    if [ ! -d ${GIT_REPO}  ]; then 
        echo "GIT_REPO DOES NOT EXIST"
        if [ ! -z "${GIT_SOURCE}" ]; then
            (cd "${GIT_ROOT}"; git clone "${GIT_SOURCE}")
        else
            echo "GIT_SOURCE NOT DEFINED CANNOT CREATE GIT_REPO"
            return -1;
        fi
    else
        (cd ${GIT_REPO}; git pull origin master)
    fi
}

git_rollback(){
    if [ -z ${GIT_ENABLED}]; then
        return -1
    fi
}

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"
if [ -z "${PID_FILE}" ]; then
    export PID_FILE="/var/run/jarvis.pid"
fi
if [ -z "${RUN_AS}" ]; then
    export RUN_AS='root'
fi

if [ -z "${LOG_NAME}" ]; then
    export LOG_NAME='XMPP / IRC chatbot daemon'
fi

if [ -z "${DAEMON_NAME}" ]; then
    export DAEMON_NAME='universal.pl'
fi

case "$1" in
  start)
	log_daemon_msg "Starting ${LOG_NAME}" "${DAEMON_NAME}"
        protect_default_file
        if [ ! -f "${PID_FILE}" ]; then 
            PID_DIR=$(dirname $PID_FILE)
            if [ ! -d ${PID_DIR} ] ;then mkdir -p ${PID_DIR}; fi
            touch ${PID_FILE}
            chown ${RUN_AS} ${PID_FILE}
        fi
	if start-stop-daemon --start --quiet --oknodo --pidfile ${PID_FILE} --chdir ${GIT_REPO} --chuid ${RUN_AS} --exec ${GIT_REPO}/universal.pl > /dev/null 2>&1; then
	    log_end_msg 0
	else
	    log_end_msg 1
	fi
	;;
  stop)
	log_daemon_msg "Stopping ${LOG_NAME}" "${DAEMON_NAME}"
	if start-stop-daemon --stop --quiet --oknodo --pidfile ${PID_FILE}; then
	    log_end_msg 0
	else
	    log_end_msg 1
	fi
	;;

  reload|force-reload)
	log_daemon_msg "Reloading ${LOG_NAME}" "${DAEMON_NAME}"
	if start-stop-daemon --stop --signal 1 --quiet --oknodo --pidfile ${PID_FILE} --chdir ${GIT_REPO} --chuid ${RUN_AS} --exec ${GIT_REPO}/universal.pl; then
	    log_end_msg 0
	else
	    log_end_msg 1
	fi
	;;

  restart)
	check_privsep_dir
	check_config
	log_daemon_msg "Restarting ${LOG_NAME}" "${DAEMON_NAME}"
	start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile ${PID_FILE}
	check_for_no_start log_end_msg
	check_dev_null log_end_msg
	if start-stop-daemon --start --quiet --oknodo --pidfile ${PID_FILE} -chdir ${GIT_REPO} --chuid ${RUN_AS} --exec ${GIT_REPO}/universal.pl; then
	    log_end_msg 0
	else
	    log_end_msg 1
	fi
	;;

  try-restart)
	check_privsep_dir
	check_config
	log_daemon_msg "Restarting ${LOG_NAME}" "${DAEMON_NAME}"
	set +e
	start-stop-daemon --stop --quiet --retry 30 --pidfile ${PID_FILE}
	RET="$?"
	set -e
	case $RET in
	    0)
		# old daemon stopped
		check_for_no_start log_end_msg
		check_dev_null log_end_msg
		if start-stop-daemon --start --quiet --oknodo --pidfile ${PID_FILE} --chdir ${GIT_REPO} --chuid ${RUN_AS} --exec ${GIT_REPO}/universal.pl; then
		    log_end_msg 0
		else
		    log_end_msg 1
		fi
		;;
	    1)
		# daemon not running
		log_progress_msg "(not running)"
		log_end_msg 0
		;;
	    *)
		# failed to stop
		log_progress_msg "(failed to stop)"
		log_end_msg 1
		;;
	esac
	;;

  status)
	status_of_proc -p ${PID_FILE} universal.pl && exit 0 || exit $?
	;;

  *)
	log_action_msg "Usage: /etc/init.d/jarvis {start|stop|reload|force-reload|restart|try-restart|status}"
	exit 1
esac

exit 0
